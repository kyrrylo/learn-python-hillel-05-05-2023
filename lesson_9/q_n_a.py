# Variable naming

# PEP 8 наименования
changeable_variable = 5  # snake case - самое стандартное
CONSTANT_VARIABLE = 3  # capsed snake case - для констант
AnotherWayOfNaming = 5  # CamelCase - не для переменных, а для названий классов
another_WayOfNaming = 5  # смесь стилей названий - не лучшая практика

# Осмысленность названий
# "бессмысленные названия" допускаются для небольших фрагментов кода (внутри цикла или функции) размером до 10 строк

a, b, c = 3, 4, 5  # стороны треугольника, ленивый вариант
side_a, side_d, side_c = 3, 4, 5  # вариант получше

print(side_d)

side_d /= 2

# Try-Except или If-Elif-Else -> Придерживаемся If-Elif-Else
def calculate_perimeter():
    return 3

def calculate_square():
    return 5


if __name__ == '__main__':
    while True:
        input_user = input('?').lower()
        available_inputs = ['периметр', 'площадь']

        if "периметр" in input_user:
            print(calculate_perimeter())
        elif input_user == "площадь":
            calculate_square()
        elif input_user == "выход":
            exit(0)
        else:
            print(f'Пожалуйста, введите что-то из: {available_inputs}')

# Условные выражения

'площадь'[-1] in 'ь'  # проверяем букву с буквой - зачем in?
'площадь'[-1] == 'ь'  # проверяем букву с буквой - ==

'ь' in 'площадь'  # хороший и правильный, но не выполняет задачу определения является
# ли мягкий знак последним в слове площадь

'площадь'[-1] in 'ьъ'
'площадь'[-1] == 'ь' or 'площадь'[-1] == 'ъ'  # то же, что и строчкой выше

# слева - то ЧТО ищем, справа - то, В ЧЕМ ищем
'ьъ' in 'площадь'

# Всё что можно сделать FOR'ом делается WHILE'ом,
#   но не всё что можно сделать WHILE'ом делается FOR'ом

# WHILE хорош всегда, но иногда не удобен. Удобнее для решения непонятных задач
# FOR более стандартен и хорош там где эти стандарты получается применить



